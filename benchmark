#!/bin/bash
echo "Each language reports file count and time elapsed for CONDA_PREFIX"
echo
echo "| Language (options)   | Sanity chk  | Wall clock time"
echo "|----------------------|-------------|----------------"

JULIA_NUM_THREADS=$(nproc)
NODE_OPTIONS="--max-old-space-size=8192"
CP=$CONDA_PREFIX

echo -n "| Golang              "
start=$(date +%s)
golang/find-dups/find-dups $CP 2>/dev/null >find-dups.golang
end=$(date +%s)
dups=$(grep '^  ' find-dups.golang | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

echo -n "| Rust (rust-crypto)  "
cd rust/find-dups >/dev/null
cargo build --release 2>/dev/null >/dev/null
cd - >/dev/null
start=$(date +%s)
rust/find-dups/target/release/find-dups $CP 2>/dev/null >find-dups.rust-old
end=$(date +%s)
dups=$(grep '^  ' find-dups.rust-old | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

echo -n "| Rust (RustCrypto)   "
start=$(date +%s)
rust/find-dups/target/release/find-dups --RustCrypto $CP 2>/dev/null >find-dups.rust-new
end=$(date +%s)
dups=$(grep '^  ' find-dups.rust-new | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

echo -n "| Ruby                "
start=$(date +%s)
ruby/find-dups $CP 2>/dev/null >find-dups.ruby
end=$(date +%s)
dups=$(grep '^  ' find-dups.ruby | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

echo -n "| Python              "
start=$(date +%s)
python/find-dups $CP >find-dups.python 2>/dev/null
end=$(date +%s)
dups=$(grep '^  ' find-dups.python | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

echo -n "| Julia (-O3)         "
start=$(date +%s)
julia -O3 julia/find-dups $CP 2>/dev/null >find-dups.julia 
end=$(date +%s)
dups=$(grep '^  ' find-dups.julia | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

echo -n "| Haskell             "
start=$(date +%s)
haskell/find-dups $CP 2>/dev/null >find-dups.haskell
end=$(date +%s)
dups=$(grep '^  ' find-dups.haskell | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

echo -n "| TypeScript (js-sha1)"
cd typescript >/dev/null
tsc find-dups.ts
cp find-dups.js find-dups
cd - >/dev/null
start=$(date +%s)
typescript/find-dups -j $CP 2>/dev/null >find-dups.typescript
end=$(date +%s)
dups=$(grep '^  ' find-dups.typescript | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

echo -n "| TypeScript (Rusha)  "
start=$(date +%s)
typescript/find-dups -r $CP 2>/dev/null >find-dups.typescript
end=$(date +%s)
dups=$(grep '^  ' find-dups.typescript | wc -l)
secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
echo " | dups $dups | $secs"

# Far too slow to run very much
#echo -n "| Bash                "
#start=$(date +%s)
#bash/find-dups $CP >find-dups.bash
#end=$(date +%s)
#dups=$(grep '^  ' find-dups.bash | wc -l)
#secs=$(numfmt --to=si --suffix=" secs" $(($end-$start)))
#echo " | dups $dups | $secs"

